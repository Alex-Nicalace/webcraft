.main-menu {
  // .main-menu__list
  &__list {
    display: flex;
    justify-content: space-between;
  }
  // .main-menu__item
  &__item {
  }
}

.wrap-main-menu {
  position: absolute;
  padding-block: rem(60);
  // padding: rem(60) rem(20);
  background-color: var(--sero-siniy);
  top: 100%;
  left: 0;
  width: 100%;
  overflow: hidden;
  box-shadow: 0 rem(14) rem(20) 0 rgba(17, 21, 26, 0.4);
  opacity: 0;
  visibility: hidden;
  transition:
    opacity 0.5s ease-out,
    visibility 0.5s ease-out;

  @include adaptiveValue('padding-block', 60, 40, $mobile, $minWidth, 1);

  .main-menu {
    &__list {
      position: relative;
      flex-direction: column;
      gap: rem(30);
      z-index: 1;

      @include mobileSmall {
        gap: rem(20);
      }
    }

    &__item {
      &:nth-child(1) {
        transform: translateX(rem(-50));
      }
      &:nth-child(2) {
        transform: translateX(rem(-100));
      }
      transform: translateX(rem(-150));
      transition: transform 0.5s ease-out;
    }
  }

  &__top {
    &:not(:last-child) {
      margin-bottom: rem(30);
    }
  }

  &__dekor {
    position: absolute;
    // т.к. процентные значения привязаны к геометрии позиционированного родителя
    // то в данном случае больше подходит значения в vw чтобы относительные величины были относительно ширины экрана
    left: vw(-413, $mobile);
    top: vw(-485, $mobile);
    width: vw(1227, $mobile);
    height: vw(1227, $mobile);
    pointer-events: none;
    stroke: var(--vspomogatelnyy-1);

    @include mobileSmall {
      $widthScreen: 320;
      left: vw(-295, $minWidth);
      top: vw(-266, $minWidth);
      width: vw(800, $minWidth);
      height: vw(789, $minWidth);
    }
  }

  &_open {
    opacity: 1;
    visibility: visible;

    .main-menu {
      &__item {
        &:nth-child(1n) {
          transform: translateX(0);
        }
      }
    }
  }
}
